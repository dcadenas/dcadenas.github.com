<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Metaprogramming | Daniel Cadenas]]></title>
  <link href="http://dcadenas.github.com/blog/categories/metaprogramming/atom.xml" rel="self"/>
  <link href="http://dcadenas.github.com/"/>
  <updated>2012-03-18T03:42:20-03:00</updated>
  <id>http://dcadenas.github.com/</id>
  <author>
    <name><![CDATA[Daniel Cadenas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Singleton class magic without using singleton classes]]></title>
    <link href="http://dcadenas.github.com/blog/2008/09/03/singleton-class-magic-without-using/"/>
    <updated>2008-09-03T11:25:00-03:00</updated>
    <id>http://dcadenas.github.com/blog/2008/09/03/singleton-class-magic-without-using</id>
    <content type="html"><![CDATA[<p>Excellent posts <a href="http://blog.jayfields.com/2008/04/extend-modules-instead-of-defining.html">here</a> and <a href="http://blog.jayfields.com/2008/07/ruby-underuse-of-modules.html">here</a> by Jay Fields where he gives an alternative to use singleton classes.</p>

<p>Instead of doing this:</p>

<p>```ruby
class &lt;&lt; self
  def hi</p>

<pre><code>puts 'Hi'
</code></pre>

<p>  end
end
```</p>

<p>he proposes to do this:</p>

<p>```ruby
mod = Module.new do
  def hi</p>

<pre><code>puts 'Hi'
</code></pre>

<p>  end
end
extend mod
```</p>
]]></content>
  </entry>
  
</feed>
