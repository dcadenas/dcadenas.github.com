<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Daniel Cadenas]]></title>
  <link href="http://dcadenas.github.com/atom.xml" rel="self"/>
  <link href="http://dcadenas.github.com/"/>
  <updated>2012-03-18T03:42:20-03:00</updated>
  <id>http://dcadenas.github.com/</id>
  <author>
    <name><![CDATA[Daniel Cadenas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Moved to github pages and Octopress]]></title>
    <link href="http://dcadenas.github.com/blog/2012/03/16/moving-to-github-pages-and-octopress/"/>
    <updated>2012-03-16T22:25:00-03:00</updated>
    <id>http://dcadenas.github.com/blog/2012/03/16/moving-to-github-pages-and-octopress</id>
    <content type="html"><![CDATA[<p>I imported some articles from my <a href="http://dcadenas.blogspot.com">previous blog</a> using this <a href="https://gist.github.com/1578928">script</a> and ignored those I though were not too important. Soooo, welcome to my brand new github powered blog!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Updating go to edge]]></title>
    <link href="http://dcadenas.github.com/blog/2012/02/18/updating-go-to-edge/"/>
    <updated>2012-02-18T17:56:00-02:00</updated>
    <id>http://dcadenas.github.com/blog/2012/02/18/updating-go-to-edge</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> <span class="nv">$GOROOT</span> <span class="o">&amp;&amp;</span> hg update tip <span class="o">&amp;&amp;</span> <span class="nb">cd </span>src <span class="o">&amp;&amp;</span> ./all.bash
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CORS with Ext.js]]></title>
    <link href="http://dcadenas.github.com/blog/2011/10/11/cors-with-extjs/"/>
    <updated>2011-10-11T19:04:00-02:00</updated>
    <id>http://dcadenas.github.com/blog/2011/10/11/cors-with-extjs</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">Ext</span><span class="p">.</span><span class="nx">Ajax</span><span class="p">.</span><span class="nx">useDefaultXhrHeader</span> <span class="o">=</span> <span class="kc">false</span>
</span><span class='line'><span class="nx">Ext</span><span class="p">.</span><span class="nx">Ajax</span><span class="p">.</span><span class="nx">request</span><span class="p">({</span><span class="nx">url</span><span class="o">:</span><span class="s1">&#39;http://ipv4.0-9.fi&#39;</span><span class="p">,</span> <span class="nx">success</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">,</span><span class="nx">req</span><span class="p">){</span><span class="nx">alert</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">responseText</span><span class="p">)}})</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Download a file from Wupload or Filesonic with curl]]></title>
    <link href="http://dcadenas.github.com/blog/2011/09/10/download-file-from-megaupload-with-curl/"/>
    <updated>2011-09-10T16:42:00-03:00</updated>
    <id>http://dcadenas.github.com/blog/2011/09/10/download-file-from-megaupload-with-curl</id>
    <content type="html"><![CDATA[<p>Wupload:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -d <span class="s2">&quot;email=your@email.com&amp;password=yourpassword&amp;redirect=/file/159344782&quot;</span> -b cookies.txt -c cookies.txt  www.wupload.com/account/login -L -o 20110910StokevsLiverpool1ertPachorriarte.mkv
</span></code></pre></td></tr></table></div></figure>


<p>Filesonic:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -d <span class="s2">&quot;email=your@email.com&amp;password=yourpassword&amp;redirect=/file/2820172905&quot;</span> -b cookies.txt -c cookies.txt www.filesonic.com/user/login -L -o somevideo.wmv
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Valgrind on your ruby extension test]]></title>
    <link href="http://dcadenas.github.com/blog/2011/03/09/valgrind-on-your-ruby-extension-test/"/>
    <updated>2011-03-09T21:47:00-02:00</updated>
    <id>http://dcadenas.github.com/blog/2011/03/09/valgrind-on-your-ruby-extension-test</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>valgrind --num-callers<span class="o">=</span>50 --error-limit<span class="o">=</span>no --partial-loads-ok<span class="o">=</span>yes --undef-value-errors<span class="o">=</span>no rspec spec/extension_spec.rb
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ssh tunnel for socks proxy]]></title>
    <link href="http://dcadenas.github.com/blog/2010/12/21/ssh-tunnel-for-socks-proxy/"/>
    <updated>2010-12-21T13:48:00-02:00</updated>
    <id>http://dcadenas.github.com/blog/2010/12/21/ssh-tunnel-for-socks-proxy</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh -fCqND 8080 linode
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[apr_poll timeout while running ab]]></title>
    <link href="http://dcadenas.github.com/blog/2010/04/05/aprpoll-timeout-while-running-ab/"/>
    <updated>2010-04-05T02:40:00-03:00</updated>
    <id>http://dcadenas.github.com/blog/2010/04/05/aprpoll-timeout-while-running-ab</id>
    <content type="html"><![CDATA[<p>If you get this error while running <code>ab</code> (ApacheBench) on your mac:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apr_poll: The timeout specified has expired (70007)</span></code></pre></td></tr></table></div></figure>


<p>It may get fixed with:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo sysctl -w net.inet.ip.portrange.first<span class="o">=</span>32768
</span><span class='line'>sudo sysctl -w net.inet.tcp.msl<span class="o">=</span>100
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Ruby gems]]></title>
    <link href="http://dcadenas.github.com/blog/2010/04/02/new-ruby-gems/"/>
    <updated>2010-04-02T16:45:00-03:00</updated>
    <id>http://dcadenas.github.com/blog/2010/04/02/new-ruby-gems</id>
    <content type="html"><![CDATA[<p>Oops! It&#8217;s been a while since the last time I updated my blog.
I promise I&#8217;ll try to get back to business and write more often whenever I find some time.</p>

<p>First of all, many months ago I joined <a href="http://cuboxlabs.com">Cubox</a>, a new uruguayan startup that works for many US clients including partnership and offshore work with renowned Rails shops. We are continuously growing and we are always happy to add talented developers to our team so if you are interested and are passionate about Ruby, Rails and agile development just email us.</p>

<p>We believe in open source, we use it in all our projects and we also contribute to the community. Here is an update of my latest new gems which were not covered in this blog. I hope you find them useful, click on the links for more info:</p>

<ul>
<li><a href="http://github.com/dcadenas/preforker">Preforker</a>: Easily create preforking servers (like Unicorn architecture)</li>
<li><a href="http://github.com/cubox/rankable_graph">Rankable Graph</a>: Calculates the pagerank of medium sized graphs (some millions of nodes).</li>
<li><a href="http://github.com/dcadenas/state_pattern">State Pattern</a>: A classical implementation of the state pattern.</li>
<li><a href="http://github.com/dcadenas/stubborn">Stubborn</a>: Helps finding missing external API stubs in your tests.</li>
<li><a href="http://github.com/dcadenas/google_set">Google Set</a>: API for Google Sets.</li>
<li><a href="http://github.com/dcadenas/change_watcher">Change Watcher</a>: Helps keeping a log of changes. Useful to store scraped info from cron scripts.</li>
</ul>


<p>So check them out and contribute!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gem to send mails through Gmail]]></title>
    <link href="http://dcadenas.github.com/blog/2009/05/22/gem-to-send-mails-through-gmail/"/>
    <updated>2009-05-22T19:23:00-03:00</updated>
    <id>http://dcadenas.github.com/blog/2009/05/22/gem-to-send-mails-through-gmail</id>
    <content type="html"><![CDATA[<p>I made this little gem, <code>gmail_sender</code> that I find useful to log things when I&#8217;m running some script in my VPS, I use it for things like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">g</span> <span class="o">=</span> <span class="no">GmailSender</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;gmail_account&quot;</span><span class="p">,</span> <span class="s2">&quot;password&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="c1">#Some interesting script that returns some interesting results in script_results</span>
</span><span class='line'>  <span class="n">g</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;dcadenas@gmail.com&quot;</span><span class="p">,</span> <span class="s2">&quot;It worked!&quot;</span><span class="p">,</span> <span class="n">script_results</span><span class="o">.</span><span class="n">to_yaml</span><span class="p">)</span>
</span><span class='line'><span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="n">g</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;dcadenas@gmail.com&quot;</span><span class="p">,</span> <span class="s2">&quot;It didn&#39;t work :(&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">message</span><span class="si">}</span><span class="se">\n</span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">backtrace</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">raise</span> <span class="n">e</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>So all you need to pass to the <code>send</code> method is an email address, the subject and the email content.</p>

<p>The source code is <a href="http://github.com/dcadenas/gmail_sender/tree/master">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some useful bash functions]]></title>
    <link href="http://dcadenas.github.com/blog/2009/05/22/some-useful-bash-functions/"/>
    <updated>2009-05-22T19:12:00-03:00</updated>
    <id>http://dcadenas.github.com/blog/2009/05/22/some-useful-bash-functions</id>
    <content type="html"><![CDATA[<p>I use this bash functions to open vim with splits for each file in which grep or rak find the pattern I&#8217;m searching for:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>grepvim<span class="o">(){</span>
</span><span class='line'>  grep -rl <span class="s2">&quot;$1&quot;</span> <span class="nv">$2</span>| xargs mvim -o +/<span class="s2">&quot;$1&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>rakvim<span class="o">(){</span>
</span><span class='line'>  rak -l <span class="s2">&quot;$1&quot;</span> <span class="nv">$2</span>| xargs mvim -o +/<span class="s2">&quot;$1&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tunneling through SSH]]></title>
    <link href="http://dcadenas.github.com/blog/2009/04/20/tunneling-through-ssh/"/>
    <updated>2009-04-20T17:45:00-03:00</updated>
    <id>http://dcadenas.github.com/blog/2009/04/20/tunneling-through-ssh</id>
    <content type="html"><![CDATA[<p>To tunnel through ssh do:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh -v -nNT4 -R :4007:localhost:3000 myhost
</span></code></pre></td></tr></table></div></figure>


<p>which maps the remote port 4007 to the local port 3000.
<code>myhost</code> is the host you want to connect and it&#8217;s a good idea to have it as an entry in your ssh config.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Joined ENTP!]]></title>
    <link href="http://dcadenas.github.com/blog/2009/03/10/joined-entp/"/>
    <updated>2009-03-10T01:39:00-03:00</updated>
    <id>http://dcadenas.github.com/blog/2009/03/10/joined-entp</id>
    <content type="html"><![CDATA[<p>Oh I just realized that I never wrote a post about me joining <a href="http://entp.com">ENTP</a> 4 months ago!!</p>

<p>I&#8217;m thrilled about this great chance I&#8217;m having working with some of the most talented Ruby developers and I wish that osmosis does its magic and maybe I get at least some tiny part of their mojo. I&#8217;m really happy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RSpec fun]]></title>
    <link href="http://dcadenas.github.com/blog/2009/03/10/rspec-fun/"/>
    <updated>2009-03-10T01:31:00-03:00</updated>
    <id>http://dcadenas.github.com/blog/2009/03/10/rspec-fun</id>
    <content type="html"><![CDATA[<p>So I was there, running a huge and slow rspec test suite on my Mac and thought &#8220;god, I wish I could make it run faster just by tilting my laptop right and make those damn dots fall&#8221; so&#8230; the most awesome rspec optimization was <a href="http://github.com/dcadenas/rspec_prank">born</a> :p</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Capistrano and Git problems]]></title>
    <link href="http://dcadenas.github.com/blog/2008/12/12/capistrano-and-git-problems/"/>
    <updated>2008-12-12T15:51:00-02:00</updated>
    <id>http://dcadenas.github.com/blog/2008/12/12/capistrano-and-git-problems</id>
    <content type="html"><![CDATA[<p>If you get this error when deploying with Capistrano:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ERROR:gitosis.serve.main:Repository read access denied</span></code></pre></td></tr></table></div></figure>


<p>You may solve it with:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh-add ~/.ssh/id_rsa
</span></code></pre></td></tr></table></div></figure>


<p>This is needed because my ssh config is configured to forward my identity to the deployment machine (with <code>ForwardAgent yes</code>) so the ssh agent must know my private key.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recursively replace all files with tabs in Linux]]></title>
    <link href="http://dcadenas.github.com/blog/2008/10/19/recursively-replace-all-files-with-tabs/"/>
    <updated>2008-10-19T23:58:00-02:00</updated>
    <id>http://dcadenas.github.com/blog/2008/10/19/recursively-replace-all-files-with-tabs</id>
    <content type="html"><![CDATA[<p>Ok I don&#8217;t want to forget this ever again so I will write it here.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sed <span class="s1">&#39;s/  //g&#39;</span> <span class="sb">`</span>find -type f<span class="sb">`</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Note:</strong> I&#8217;m using both the grave accent <code>`</code> and the apostrophe <code>'</code>. <code>`</code> is used to create a special kind of shell escape that substitutes each line of the output in the place you inserted it. So sed will be called once for each file found by find.</p>

<p>It&#8217;s the same as doing manually:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sed <span class="s1">&#39;s/  //g&#39;</span> ./file1.txt
</span><span class='line'>sed <span class="s1">&#39;s/  //g&#39;</span> ./file2.txt
</span><span class='line'>sed <span class="s1">&#39;s/  //g&#39;</span> ./dir/file2.txt
</span></code></pre></td></tr></table></div></figure>


<p>To type the tab inside the sed regexp hit ctrl-v and then the tab key.
<code>find -type f</code> will show in each line the path of each file recursively.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Auto Focusable Forms]]></title>
    <link href="http://dcadenas.github.com/blog/2008/10/10/auto-focusable-forms/"/>
    <updated>2008-10-10T23:13:00-02:00</updated>
    <id>http://dcadenas.github.com/blog/2008/10/10/auto-focusable-forms</id>
    <content type="html"><![CDATA[<p>Just commited a Rails plugin (my first one, yay!!) to give automatic focus to the first input of the first form in each of your views.</p>

<p>Of course you can disable this behaviour but I think that having focus in the first input by default can be very useful.</p>

<p>You can read more in the project page <a href="http://github.com/dcadenas/auto_focusable_forms/tree">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Internet Explorer 7 accept header and Rails respond_to]]></title>
    <link href="http://dcadenas.github.com/blog/2008/10/07/internet-explorer-7-accept-header-and/"/>
    <updated>2008-10-07T20:00:00-02:00</updated>
    <id>http://dcadenas.github.com/blog/2008/10/07/internet-explorer-7-accept-header-and</id>
    <content type="html"><![CDATA[<p>If you browse through IE to an url that should spit html but instead you see the feed reader page (the one with the text &#8220;You are viewing a feed that contains frequently updated content&#8221;) then just be sure that the page&#8217;s <code>respond_to</code> has the html mime type as its first item instead of <code>atom</code> or <code>rss</code>.</p>

<p>This solution addresses the way IE constructs its http request accept header which accepts any MIME type you may be serving so the first one available will be accepted which is not necessarily the html you are expecting.</p>

<p>Firefox doesn&#8217;t have this problem because it explicitly states what it wants.
So in summary, change this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">format</span><span class="o">.</span><span class="n">atom</span>
</span><span class='line'>  <span class="nb">format</span><span class="o">.</span><span class="n">html</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>to this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">format</span><span class="o">.</span><span class="n">html</span>
</span><span class='line'>  <span class="nb">format</span><span class="o">.</span><span class="n">atom</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[One thing to keep in mind when extending Ruby classes]]></title>
    <link href="http://dcadenas.github.com/blog/2008/10/06/quirk-to-keep-in-mind-when-extending/"/>
    <updated>2008-10-06T02:07:00-02:00</updated>
    <id>http://dcadenas.github.com/blog/2008/10/06/quirk-to-keep-in-mind-when-extending</id>
    <content type="html"><![CDATA[<p>I was reading this <a href="http://eigenclass.org/hiki/class+hierarchy+introspection+evil.rb">post</a> in Mauricio Fernandez&#8217;s blog (rcov) and I got surprised about the behavior I&#8217;m summarizing in the following code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="s2">&quot;A#foo&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">singleton_class</span>
</span><span class='line'>    <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
</span><span class='line'>      <span class="nb">self</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="n">A</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">a</span><span class="o">.</span><span class="n">foo</span> <span class="c1">#=&gt; A#foo</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">a</span><span class="o">.</span><span class="n">singleton_class</span><span class="o">.</span><span class="n">ancestors</span><span class="o">.</span><span class="n">inspect</span> <span class="c1">#=&gt; [A, Object, Kernel]</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">X</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="s2">&quot;X#foo&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'>  <span class="kp">include</span> <span class="n">X</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">extend</span> <span class="n">X</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">a</span><span class="o">.</span><span class="n">foo</span> <span class="c1">#=&gt; A#foo (and not X#foo!!!!!!!)</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">a</span><span class="o">.</span><span class="n">singleton_class</span><span class="o">.</span><span class="n">ancestors</span><span class="o">.</span><span class="n">inspect</span> <span class="c1">#=&gt; [A, X, Object, Kernel] (and not [X, A, X, Object, Kernel])</span>
</span></code></pre></td></tr></table></div></figure>


<p>So remember, you cannot extend or include a class with a module that is already present in the ancestors chain, it will be ignored!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mocha_mock_path error in your tests]]></title>
    <link href="http://dcadenas.github.com/blog/2008/09/26/mochamockpath-error-in-your-tests/"/>
    <updated>2008-09-26T12:29:00-03:00</updated>
    <id>http://dcadenas.github.com/blog/2008/09/26/mochamockpath-error-in-your-tests</id>
    <content type="html"><![CDATA[<p>If you use stubs in your Mocha tests but they break because of this error:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ActionView::TemplateError: undefined method `mocha_mock_path'</span></code></pre></td></tr></table></div></figure>


<p>Check that you also stub the <code>class</code> method.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">stub</span><span class="p">(</span><span class="ss">:title</span> <span class="o">=&gt;</span> <span class="s1">&#39;a title&#39;</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="no">News</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip about encapsulation]]></title>
    <link href="http://dcadenas.github.com/blog/2008/09/19/good-tip-about-encapsulation/"/>
    <updated>2008-09-19T18:46:00-03:00</updated>
    <id>http://dcadenas.github.com/blog/2008/09/19/good-tip-about-encapsulation</id>
    <content type="html"><![CDATA[<p>I was reading and <a href="http://www.martinfowler.com/bliki/GetterEradicator.html">article</a> about encapsulation on Martin Fowler&#8217;s blog when I found this simple and practical tip:</p>

<blockquote><p>Always beware of cases where some code invokes more than one method on the same object</p><footer><strong>Kent Beck</strong> <cite><a href='http://www.martinfowler.com/bliki/GetterEradicator.html'>www.martinfowler.com/bliki/&hellip;</a></cite></footer></blockquote>


<p>It&#8217;s not a rule but I think it can be considered one more code smell to keep in mind.</p>
]]></content>
  </entry>
  
</feed>
