<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | Daniel Cadenas]]></title>
  <link href="http://dcadenas.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://dcadenas.github.com/"/>
  <updated>2012-03-18T03:21:55-03:00</updated>
  <id>http://dcadenas.github.com/</id>
  <author>
    <name><![CDATA[Daniel Cadenas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Recursively replace all files with tabs in Linux]]></title>
    <link href="http://dcadenas.github.com/blog/2008/10/19/recursively-replace-all-files-with-tabs/"/>
    <updated>2008-10-19T23:58:00-02:00</updated>
    <id>http://dcadenas.github.com/blog/2008/10/19/recursively-replace-all-files-with-tabs</id>
    <content type="html"><![CDATA[<p>Ok I don't want to forget this ever again so I will write it here.</p>

<p><code>bash
sed 's/  //g' `find -type f`
</code></p>

<p><strong>Note:</strong> I'm using both the grave accent <code>`</code> and the apostrophe <code>'</code>. <code>`</code> is used to create a special kind of shell escape that substitutes each line of the output in the place you inserted it. So sed will be called once for each file found by find.</p>

<p>It's the same as doing manually:</p>

<p><code>bash
sed 's/  //g' ./file1.txt
sed 's/  //g' ./file2.txt
sed 's/  //g' ./dir/file2.txt
</code></p>

<p>To type the tab inside the sed regexp hit ctrl-v and then the tab key.
<code>find -type f</code> will show in each line the path of each file recursively.</p>
]]></content>
  </entry>
  
</feed>
